// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable, constant_identifier_names, public_member_api_docs

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

class TileMetadata {
  factory TileMetadata(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }
  TileMetadata._(this._bc, this._bcOffset);

  static const fb.Reader<TileMetadata> reader = _TileMetadataReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get lastModifiedLocally =>
      const fb.Int64Reader().vTableGet(_bc, _bcOffset, 4, 0);
  int get staleAt => const fb.Int64Reader().vTableGet(_bc, _bcOffset, 6, 0);
  int get lastModified =>
      const fb.Int64Reader().vTableGet(_bc, _bcOffset, 8, 0);
  String? get etag =>
      const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'TileMetadata{lastModifiedLocally: $lastModifiedLocally, staleAt: $staleAt, lastModified: $lastModified, etag: $etag}';
  }
}

class _TileMetadataReader extends fb.TableReader<TileMetadata> {
  const _TileMetadataReader();

  @override
  TileMetadata createObject(fb.BufferContext bc, int offset) =>
      TileMetadata._(bc, offset);
}

class TileMetadataBuilder {
  TileMetadataBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addLastModifiedLocally(int? lastModifiedLocally) {
    fbBuilder.addInt64(0, lastModifiedLocally);
    return fbBuilder.offset;
  }

  int addStaleAt(int? staleAt) {
    fbBuilder.addInt64(1, staleAt);
    return fbBuilder.offset;
  }

  int addLastModified(int? lastModified) {
    fbBuilder.addInt64(2, lastModified);
    return fbBuilder.offset;
  }

  int addEtagOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TileMetadataObjectBuilder extends fb.ObjectBuilder {
  final int? _lastModifiedLocally;
  final int? _staleAt;
  final int? _lastModified;
  final String? _etag;

  TileMetadataObjectBuilder({
    int? lastModifiedLocally,
    int? staleAt,
    int? lastModified,
    String? etag,
  })  : _lastModifiedLocally = lastModifiedLocally,
        _staleAt = staleAt,
        _lastModified = lastModified,
        _etag = etag;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? etagOffset = _etag == null ? null : fbBuilder.writeString(_etag);
    fbBuilder.startTable(4);
    fbBuilder.addInt64(0, _lastModifiedLocally);
    fbBuilder.addInt64(1, _staleAt);
    fbBuilder.addInt64(2, _lastModified);
    fbBuilder.addOffset(3, etagOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}

class TileMetadataEntry {
  factory TileMetadataEntry(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }
  TileMetadataEntry._(this._bc, this._bcOffset);

  static const fb.Reader<TileMetadataEntry> reader = _TileMetadataEntryReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  String? get id =>
      const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  TileMetadata? get metadata =>
      TileMetadata.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'TileMetadataEntry{id: $id, metadata: $metadata}';
  }
}

class _TileMetadataEntryReader extends fb.TableReader<TileMetadataEntry> {
  const _TileMetadataEntryReader();

  @override
  TileMetadataEntry createObject(fb.BufferContext bc, int offset) =>
      TileMetadataEntry._(bc, offset);
}

class TileMetadataEntryBuilder {
  TileMetadataEntryBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addIdOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int addMetadataOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TileMetadataEntryObjectBuilder extends fb.ObjectBuilder {
  final String? _id;
  final TileMetadataObjectBuilder? _metadata;

  TileMetadataEntryObjectBuilder({
    String? id,
    TileMetadataObjectBuilder? metadata,
  })  : _id = id,
        _metadata = metadata;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? idOffset = _id == null ? null : fbBuilder.writeString(_id);
    final int? metadataOffset = _metadata?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, idOffset);
    fbBuilder.addOffset(1, metadataOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}

class TileMetadataMap {
  factory TileMetadataMap(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }
  TileMetadataMap._(this._bc, this._bcOffset);

  static const fb.Reader<TileMetadataMap> reader = _TileMetadataMapReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  List<TileMetadataEntry>? get entries =>
      const fb.ListReader<TileMetadataEntry>(TileMetadataEntry.reader)
          .vTableGetNullable(_bc, _bcOffset, 4);

  @override
  String toString() {
    return 'TileMetadataMap{entries: $entries}';
  }
}

class _TileMetadataMapReader extends fb.TableReader<TileMetadataMap> {
  const _TileMetadataMapReader();

  @override
  TileMetadataMap createObject(fb.BufferContext bc, int offset) =>
      TileMetadataMap._(bc, offset);
}

class TileMetadataMapBuilder {
  TileMetadataMapBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(1);
  }

  int addEntriesOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class TileMetadataMapObjectBuilder extends fb.ObjectBuilder {
  final List<TileMetadataEntryObjectBuilder>? _entries;

  TileMetadataMapObjectBuilder({
    List<TileMetadataEntryObjectBuilder>? entries,
  }) : _entries = entries;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? entriesOffset = _entries == null
        ? null
        : fbBuilder.writeList(
            _entries.map((b) => b.getOrCreateOffset(fbBuilder)).toList());
    fbBuilder.startTable(1);
    fbBuilder.addOffset(0, entriesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
